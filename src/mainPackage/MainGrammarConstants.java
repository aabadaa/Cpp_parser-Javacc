/* Generated By:JavaCC: Do not edit this line. MainGrammarConstants.java */
package mainPackage;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MainGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOUBLE_VALUE = 7;
  /** RegularExpression Id. */
  int BOOLEAN_VALUE = 8;
  /** RegularExpression Id. */
  int STR = 9;
  /** RegularExpression Id. */
  int INT_VALUE = 10;
  /** RegularExpression Id. */
  int CHAR_VALUE = 11;
  /** RegularExpression Id. */
  int PLUS = 12;
  /** RegularExpression Id. */
  int MINUS = 13;
  /** RegularExpression Id. */
  int Mulp = 14;
  /** RegularExpression Id. */
  int DIV = 15;
  /** RegularExpression Id. */
  int MOD = 16;
  /** RegularExpression Id. */
  int Assignment = 17;
  /** RegularExpression Id. */
  int AND = 18;
  /** RegularExpression Id. */
  int OR = 19;
  /** RegularExpression Id. */
  int NOT = 20;
  /** RegularExpression Id. */
  int pp = 21;
  /** RegularExpression Id. */
  int mm = 22;
  /** RegularExpression Id. */
  int If = 23;
  /** RegularExpression Id. */
  int FOR = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int DO = 26;
  /** RegularExpression Id. */
  int SWITCH = 27;
  /** RegularExpression Id. */
  int CASE = 28;
  /** RegularExpression Id. */
  int DEF = 29;
  /** RegularExpression Id. */
  int BREAK = 30;
  /** RegularExpression Id. */
  int CONTINUE = 31;
  /** RegularExpression Id. */
  int Else = 32;
  /** RegularExpression Id. */
  int Semicolon = 33;
  /** RegularExpression Id. */
  int TP = 34;
  /** RegularExpression Id. */
  int COMA = 35;
  /** RegularExpression Id. */
  int LeftParenthesis = 36;
  /** RegularExpression Id. */
  int RightParenthesis = 37;
  /** RegularExpression Id. */
  int LeftBrace = 38;
  /** RegularExpression Id. */
  int RightBrace = 39;
  /** RegularExpression Id. */
  int Compare = 40;
  /** RegularExpression Id. */
  int CIN = 41;
  /** RegularExpression Id. */
  int COUT = 42;
  /** RegularExpression Id. */
  int INPUTBRACE = 43;
  /** RegularExpression Id. */
  int OUTPUTBRACE = 44;
  /** RegularExpression Id. */
  int ENDLINE = 45;
  /** RegularExpression Id. */
  int Id = 46;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ML_COMMENT_STATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "<token of kind 3>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 6>",
    "<DOUBLE_VALUE>",
    "<BOOLEAN_VALUE>",
    "<STR>",
    "<INT_VALUE>",
    "<CHAR_VALUE>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "<Assignment>",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"++\"",
    "\"--\"",
    "\"if\"",
    "\"for\"",
    "\"while\"",
    "\"do\"",
    "\"switch\"",
    "\"case\"",
    "\"default\"",
    "\"break\"",
    "\"continue\"",
    "\"else\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "<Compare>",
    "\"cin\"",
    "\"cout\"",
    "\">>\"",
    "\"<<\"",
    "\"endl\"",
    "<Id>",
  };

}
